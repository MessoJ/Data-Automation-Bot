{% extends "base.html" %}

{% block title %}Configuration - E-commerce Data Automation{% endblock %}

{% block content %}
<div class="config-page">
    <div class="page-header">
        <h1 class="page-title">⚙️ System Configuration</h1>
        <p class="page-subtitle">Monitor and manage your e-commerce automation settings</p>
    </div>

    <!-- System Status Overview -->
    <div class="status-overview">
        <div class="status-card database" id="databaseStatus">
            <div class="status-icon">🗄️</div>
            <div class="status-info">
                <h3>Database</h3>
                <p class="status-value">Connected</p>
            </div>
            <div class="status-indicator online"></div>
        </div>
        
        <div class="status-card api" id="apiStatus">
            <div class="status-icon">🔗</div>
            <div class="status-info">
                <h3>API Connection</h3>
                <p class="status-value">Active</p>
            </div>
            <div class="status-indicator online"></div>
        </div>
        
        <div class="status-card scheduler" id="schedulerStatus">
            <div class="status-icon">⚡</div>
            <div class="status-info">
                <h3>Scheduler</h3>
                <p class="status-value">Running</p>
            </div>
            <div class="status-indicator online"></div>
        </div>
        
        <div class="status-card stripe" id="stripeStatus">
            <div class="status-icon">💳</div>
            <div class="status-info">
                <h3>Stripe</h3>
                <p class="status-value">Configured</p>
            </div>
            <div class="status-indicator online"></div>
        </div>
    </div>

    <!-- Configuration Sections -->
    <div class="config-sections">
        <!-- Database Configuration -->
        <div class="config-section">
            <div class="section-header">
                <h3 class="section-title">📊 Database Configuration</h3>
                <div class="section-status">
                    <span class="status-badge success">Connected</span>
                </div>
            </div>
            <div class="config-grid">
                <div class="config-item">
                    <label class="config-label">Type</label>
                    <div class="config-value" id="dbType">SQLite</div>
                    <button class="config-copy" onclick="copyToClipboard('SQLite')" title="Copy to clipboard">📋</button>
                </div>
                <div class="config-item">
                    <label class="config-label">Host</label>
                    <div class="config-value" id="dbHost">localhost</div>
                    <button class="config-copy" onclick="copyToClipboard('localhost')" title="Copy to clipboard">📋</button>
                </div>
                <div class="config-item">
                    <label class="config-label">Port</label>
                    <div class="config-value" id="dbPort">5432</div>
                    <button class="config-copy" onclick="copyToClipboard('5432')" title="Copy to clipboard">📋</button>
                </div>
                <div class="config-item">
                    <label class="config-label">Database Name</label>
                    <div class="config-value" id="dbName">data_automation</div>
                    <button class="config-copy" onclick="copyToClipboard('data_automation')" title="Copy to clipboard">📋</button>
                </div>
            </div>
        </div>

        <!-- API Configuration -->
        <div class="config-section">
            <div class="section-header">
                <h3 class="section-title">🔗 API Configuration</h3>
                <div class="section-status">
                    <span class="status-badge success">Active</span>
                </div>
            </div>
            <div class="config-grid">
                <div class="config-item">
                    <label class="config-label">Base URL</label>
                    <div class="config-value" id="apiBaseUrl">https://api.example.com</div>
                    <button class="config-copy" onclick="copyToClipboard(document.getElementById('apiBaseUrl').textContent)" title="Copy to clipboard">📋</button>
                </div>
                <div class="config-item">
                    <label class="config-label">Timeout (seconds)</label>
                    <div class="config-value" id="apiTimeout">30</div>
                    <button class="config-copy" onclick="copyToClipboard('30')" title="Copy to clipboard">📋</button>
                </div>
                <div class="config-item">
                    <label class="config-label">API Key Status</label>
                    <div class="config-value" id="apiKeyStatus">Configured</div>
                    <button class="config-test" onclick="testApiConnection()" title="Test connection">🧪</button>
                </div>
            </div>
        </div>

        <!-- Scheduler Configuration -->
        <div class="config-section">
            <div class="section-header">
                <h3 class="section-title">⚡ Scheduler Configuration</h3>
                <div class="section-status">
                    <span class="status-badge success">Running</span>
                </div>
            </div>
            <div class="config-grid">
                <div class="config-item">
                    <label class="config-label">Sync Interval</label>
                    <div class="config-value" id="syncInterval">900 seconds (15 minutes)</div>
                    <button class="config-copy" onclick="copyToClipboard('900')" title="Copy to clipboard">📋</button>
                </div>
                <div class="config-item">
                    <label class="config-label">Retry Attempts</label>
                    <div class="config-value" id="retryAttempts">3</div>
                    <button class="config-copy" onclick="copyToClipboard('3')" title="Copy to clipboard">📋</button>
                </div>
                <div class="config-item">
                    <label class="config-label">Retry Delay</label>
                    <div class="config-value" id="retryDelay">60 seconds</div>
                    <button class="config-copy" onclick="copyToClipboard('60')" title="Copy to clipboard">📋</button>
                </div>
                <div class="config-item">
                    <label class="config-label">Active Jobs</label>
                    <div class="config-value" id="activeJobs">5</div>
                    <button class="config-view" onclick="viewJobs()" title="View jobs">👁️</button>
                </div>
            </div>
        </div>

        <!-- E-commerce Platforms -->
        <div class="config-section">
            <div class="section-header">
                <h3 class="section-title">🛒 Platform Connections</h3>
                <div class="section-status">
                    <span class="status-badge success">5 Connected</span>
                </div>
            </div>
            <div class="platforms-grid">
                <div class="platform-card shopify">
                    <div class="platform-icon">🛍️</div>
                    <div class="platform-info">
                        <h4>Shopify</h4>
                        <p class="platform-status">Connected</p>
                        <p class="platform-url">your-store.myshopify.com</p>
                    </div>
                    <div class="platform-actions">
                        <button class="premium-btn secondary small" onclick="testPlatformConnection('shopify')">Test</button>
                        <div class="connection-indicator online"></div>
                    </div>
                </div>
                
                <div class="platform-card amazon">
                    <div class="platform-icon">📦</div>
                    <div class="platform-info">
                        <h4>Amazon</h4>
                        <p class="platform-status">Connected</p>
                        <p class="platform-url">Seller Central</p>
                    </div>
                    <div class="platform-actions">
                        <button class="premium-btn secondary small" onclick="testPlatformConnection('amazon')">Test</button>
                        <div class="connection-indicator online"></div>
                    </div>
                </div>
                
                <div class="platform-card ebay">
                    <div class="platform-icon">🏪</div>
                    <div class="platform-info">
                        <h4>eBay</h4>
                        <p class="platform-status">Connected</p>
                        <p class="platform-url">Business Account</p>
                    </div>
                    <div class="platform-actions">
                        <button class="premium-btn secondary small" onclick="testPlatformConnection('ebay')">Test</button>
                        <div class="connection-indicator online"></div>
                    </div>
                </div>
                
                <div class="platform-card woocommerce">
                    <div class="platform-icon">🌐</div>
                    <div class="platform-info">
                        <h4>WooCommerce</h4>
                        <p class="platform-status">Connected</p>
                        <p class="platform-url">yoursite.com</p>
                    </div>
                    <div class="platform-actions">
                        <button class="premium-btn secondary small" onclick="testPlatformConnection('woocommerce')">Test</button>
                        <div class="connection-indicator online"></div>
                    </div>
                </div>
                
                <div class="platform-card etsy">
                    <div class="platform-icon">🎨</div>
                    <div class="platform-info">
                        <h4>Etsy</h4>
                        <p class="platform-status">Connected</p>
                        <p class="platform-url">Your Etsy Shop</p>
                    </div>
                    <div class="platform-actions">
                        <button class="premium-btn secondary small" onclick="testPlatformConnection('etsy')">Test</button>
                        <div class="connection-indicator online"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- System Information -->
        <div class="config-section">
            <div class="section-header">
                <h3 class="section-title">ℹ️ System Information</h3>
            </div>
            <div class="system-info">
                <div class="info-card">
                    <div class="info-icon">🖥️</div>
                    <div class="info-content">
                        <h4>Server</h4>
                        <p id="serverInfo">Flask 2.3.3 on Python 3.8+</p>
                    </div>
                </div>
                
                <div class="info-card">
                    <div class="info-icon">📈</div>
                    <div class="info-content">
                        <h4>Uptime</h4>
                        <p id="uptimeInfo">2 days, 14 hours</p>
                    </div>
                </div>
                
                <div class="info-card">
                    <div class="info-icon">💾</div>
                    <div class="info-content">
                        <h4>Database Records</h4>
                        <p id="recordsInfo">15,847 total</p>
                    </div>
                </div>
                
                <div class="info-card">
                    <div class="info-icon">🔄</div>
                    <div class="info-content">
                        <h4>Last Sync</h4>
                        <p id="lastSyncInfo">2 minutes ago</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Configuration Export -->
    <div class="export-section">
        <div class="export-card">
            <div class="export-info">
                <h3>📥 Export Configuration</h3>
                <p>Download your complete system configuration for backup or migration</p>
            </div>
            <button class="premium-btn primary" onclick="exportConfiguration()">
                <span class="btn-icon">📥</span>
                <span class="btn-text">Export Config</span>
            </button>
        </div>
    </div>
</div>

<style>
.config-page {
    max-width: 1600px;
    margin: 0 auto;
    padding: var(--space-6);
}

.page-header {
    margin-bottom: var(--space-8);
    text-align: center;
}

.page-title {
    font-size: var(--text-3xl);
    font-weight: var(--font-bold);
    color: var(--neutral-800);
    margin-bottom: var(--space-2);
}

.page-subtitle {
    font-size: var(--text-lg);
    color: var(--neutral-600);
}

.status-overview {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: var(--space-6);
    margin-bottom: var(--space-8);
}

.status-card {
    background: var(--bg-primary);
    border-radius: var(--radius-2xl);
    padding: var(--space-6);
    border: 1px solid var(--neutral-200);
    box-shadow: var(--shadow-lg);
    display: flex;
    align-items: center;
    gap: var(--space-4);
    transition: all var(--transition-fast);
}

.status-card:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-xl);
}

.status-icon {
    width: 48px;
    height: 48px;
    background: var(--primary-gradient);
    border-radius: var(--radius-xl);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: var(--text-xl);
    flex-shrink: 0;
}

.status-info {
    flex: 1;
}

.status-info h3 {
    font-size: var(--text-base);
    font-weight: var(--font-semibold);
    color: var(--neutral-800);
    margin-bottom: var(--space-1);
}

.status-value {
    font-size: var(--text-sm);
    color: var(--neutral-600);
}

.status-indicator {
    width: 12px;
    height: 12px;
    border-radius: var(--radius-full);
    background: var(--success-500);
    animation: pulse 2s ease-in-out infinite;
}

.config-sections {
    display: flex;
    flex-direction: column;
    gap: var(--space-8);
    margin-bottom: var(--space-8);
}

.config-section {
    background: var(--bg-primary);
    border-radius: var(--radius-2xl);
    padding: var(--space-8);
    border: 1px solid var(--neutral-200);
    box-shadow: var(--shadow-lg);
}

.section-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: var(--space-6);
}

.section-title {
    font-size: var(--text-xl);
    font-weight: var(--font-bold);
    color: var(--neutral-800);
}

.status-badge {
    padding: var(--space-1) var(--space-3);
    border-radius: var(--radius-full);
    font-size: var(--text-xs);
    font-weight: var(--font-bold);
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.status-badge.success {
    background: var(--success-100);
    color: var(--success-700);
}

.config-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--space-4);
}

.config-item {
    display: flex;
    align-items: center;
    gap: var(--space-3);
    padding: var(--space-4);
    background: var(--neutral-50);
    border-radius: var(--radius-xl);
    border: 1px solid var(--neutral-200);
}

.config-label {
    font-size: var(--text-sm);
    font-weight: var(--font-semibold);
    color: var(--neutral-700);
    min-width: 120px;
}

.config-value {
    flex: 1;
    font-size: var(--text-sm);
    color: var(--neutral-800);
    font-family: 'Courier New', monospace;
    background: var(--bg-primary);
    padding: var(--space-2) var(--space-3);
    border-radius: var(--radius-md);
    border: 1px solid var(--neutral-300);
}

.config-copy,
.config-test,
.config-view {
    width: 32px;
    height: 32px;
    border: none;
    background: var(--neutral-200);
    border-radius: var(--radius-md);
    cursor: pointer;
    transition: all var(--transition-fast);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: var(--text-sm);
}

.config-copy:hover,
.config-test:hover,
.config-view:hover {
    background: var(--primary-color);
    color: var(--bg-primary);
}

.platforms-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--space-4);
}

.platform-card {
    display: flex;
    align-items: center;
    gap: var(--space-4);
    padding: var(--space-4);
    background: var(--neutral-50);
    border-radius: var(--radius-xl);
    border: 1px solid var(--neutral-200);
    transition: all var(--transition-fast);
}

.platform-card:hover {
    background: var(--bg-primary);
    box-shadow: var(--shadow-md);
}

.platform-icon {
    width: 40px;
    height: 40px;
    background: var(--primary-gradient);
    border-radius: var(--radius-lg);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: var(--text-lg);
}

.platform-info {
    flex: 1;
}

.platform-info h4 {
    font-size: var(--text-base);
    font-weight: var(--font-semibold);
    color: var(--neutral-800);
    margin-bottom: var(--space-1);
}

.platform-status {
    font-size: var(--text-sm);
    color: var(--success-600);
    font-weight: var(--font-medium);
    margin-bottom: var(--space-1);
}

.platform-url {
    font-size: var(--text-xs);
    color: var(--neutral-500);
    font-family: 'Courier New', monospace;
}

.platform-actions {
    display: flex;
    align-items: center;
    gap: var(--space-3);
}

.premium-btn.small {
    padding: var(--space-2) var(--space-3);
    font-size: var(--text-xs);
}

.connection-indicator {
    width: 10px;
    height: 10px;
    border-radius: var(--radius-full);
    background: var(--success-500);
}

.system-info {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: var(--space-4);
}

.info-card {
    display: flex;
    align-items: center;
    gap: var(--space-3);
    padding: var(--space-4);
    background: var(--neutral-50);
    border-radius: var(--radius-xl);
    border: 1px solid var(--neutral-200);
}

.info-icon {
    width: 36px;
    height: 36px;
    background: var(--info-100);
    border-radius: var(--radius-lg);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: var(--text-base);
}

.info-content h4 {
    font-size: var(--text-sm);
    font-weight: var(--font-semibold);
    color: var(--neutral-800);
    margin-bottom: var(--space-1);
}

.info-content p {
    font-size: var(--text-sm);
    color: var(--neutral-600);
}

.export-section {
    background: var(--bg-primary);
    border-radius: var(--radius-2xl);
    padding: var(--space-8);
    border: 1px solid var(--neutral-200);
    box-shadow: var(--shadow-lg);
}

.export-card {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--space-6);
}

.export-info h3 {
    font-size: var(--text-xl);
    font-weight: var(--font-bold);
    color: var(--neutral-800);
    margin-bottom: var(--space-2);
}

.export-info p {
    font-size: var(--text-base);
    color: var(--neutral-600);
}

@media (max-width: 768px) {
    .status-overview {
        grid-template-columns: 1fr;
    }
    
    .config-grid {
        grid-template-columns: 1fr;
    }
    
    .platforms-grid {
        grid-template-columns: 1fr;
    }
    
    .system-info {
        grid-template-columns: 1fr;
    }
    
    .export-card {
        flex-direction: column;
        text-align: center;
    }
    
    .section-header {
        flex-direction: column;
        gap: var(--space-4);
        align-items: stretch;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    loadConfiguration();
    updateSystemStatus();
});

function loadConfiguration() {
    fetch('/api/config')
        .then(response => response.json())
        .then(data => {
            updateConfigValues(data);
        })
        .catch(error => {
            console.error('Error loading configuration:', error);
        });
}

function updateConfigValues(config) {
    // Database configuration
    if (config.database) {
        document.getElementById('dbType').textContent = config.database.type || 'SQLite';
        document.getElementById('dbHost').textContent = config.database.host || 'localhost';
        document.getElementById('dbPort').textContent = config.database.port || 'N/A';
        document.getElementById('dbName').textContent = config.database.name || 'data_automation';
    }
    
    // API configuration
    if (config.api) {
        document.getElementById('apiBaseUrl').textContent = config.api.base_url || 'Not configured';
        document.getElementById('apiTimeout').textContent = config.api.timeout || '30';
        document.getElementById('apiKeyStatus').textContent = config.api.configured ? 'Configured' : 'Not configured';
    }
    
    // Scheduler configuration
    if (config.scheduler) {
        const interval = config.scheduler.interval || 900;
        document.getElementById('syncInterval').textContent = `${interval} seconds (${Math.floor(interval/60)} minutes)`;
        document.getElementById('retryAttempts').textContent = config.scheduler.retry_attempts || '3';
        document.getElementById('retryDelay').textContent = `${config.scheduler.retry_delay || 60} seconds`;
    }
}

function updateSystemStatus() {
    fetch('/api/status')
        .then(response => response.json())
        .then(data => {
            updateStatusCards(data);
            updateSystemInfo(data);
        })
        .catch(error => {
            console.error('Error getting system status:', error);
        });
}

function updateStatusCards(status) {
    // Update database status
    updateStatusCard('databaseStatus', status.database?.connected || false);
    
    // Update API status
    updateStatusCard('apiStatus', status.api?.configured || false);
    
    // Update scheduler status
    updateStatusCard('schedulerStatus', status.scheduler?.running || false);
    
    // Update Stripe status
    updateStatusCard('stripeStatus', status.stripe?.configured || false);
}

function updateStatusCard(cardId, isOnline) {
    const card = document.getElementById(cardId);
    const indicator = card.querySelector('.status-indicator');
    const statusValue = card.querySelector('.status-value');
    
    if (isOnline) {
        indicator.className = 'status-indicator online';
        statusValue.textContent = getStatusText(cardId, true);
    } else {
        indicator.className = 'status-indicator offline';
        indicator.style.background = 'var(--error-500)';
        indicator.style.animation = 'none';
        statusValue.textContent = getStatusText(cardId, false);
    }
}

function getStatusText(cardId, isOnline) {
    const statusTexts = {
        databaseStatus: isOnline ? 'Connected' : 'Disconnected',
        apiStatus: isOnline ? 'Active' : 'Inactive',
        schedulerStatus: isOnline ? 'Running' : 'Stopped',
        stripeStatus: isOnline ? 'Configured' : 'Not configured'
    };
    return statusTexts[cardId] || (isOnline ? 'Online' : 'Offline');
}

function updateSystemInfo(status) {
    document.getElementById('recordsInfo').textContent = `${status.database?.total_records || 0} total`;
    document.getElementById('activeJobs').textContent = status.scheduler?.jobs_count || 0;
}

function copyToClipboard(text) {
    navigator.clipboard.writeText(text).then(function() {
        showGlobalToast('Copied to clipboard!', 'success');
    }, function(err) {
        showGlobalToast('Failed to copy to clipboard', 'error');
    });
}

function testApiConnection() {
    showGlobalToast('Testing API connection...', 'info');
    
    fetch('/api/status')
        .then(response => response.json())
        .then(data => {
            if (data.api?.configured) {
                showGlobalToast('API connection test successful!', 'success');
            } else {
                showGlobalToast('API not properly configured', 'warning');
            }
        })
        .catch(error => {
            showGlobalToast('API connection test failed', 'error');
        });
}

function testPlatformConnection(platform) {
    showGlobalToast(`Testing ${platform} connection...`, 'info');
    
    setTimeout(() => {
        const success = Math.random() > 0.2; // 80% success rate for demo
        if (success) {
            showGlobalToast(`${platform} connection successful!`, 'success');
        } else {
            showGlobalToast(`${platform} connection failed`, 'error');
        }
    }, 1500);
}

function viewJobs() {
    window.location.href = '/jobs';
}

function exportConfiguration() {
    showGlobalToast('Exporting configuration...', 'info');
    
    fetch('/api/config')
        .then(response => response.json())
        .then(data => {
            const configBlob = new Blob([JSON.stringify(data, null, 2)], {
                type: 'application/json'
            });
            const url = URL.createObjectURL(configBlob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `config-${new Date().toISOString().slice(0, 10)}.json`;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            URL.revokeObjectURL(url);
            
            showGlobalToast('Configuration exported successfully!', 'success');
        })
        .catch(error => {
            showGlobalToast('Failed to export configuration', 'error');
        });
}

// Refresh configuration every 30 seconds
setInterval(updateSystemStatus, 30000);
</script>
{% endblock %}